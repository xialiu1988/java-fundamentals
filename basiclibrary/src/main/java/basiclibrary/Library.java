/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;
import java.util.*;
import java.text.DecimalFormat;
public class Library {
    //Feature 1: roll the Dice and return the values of each time
    public int[] roll(int n) {
        int[] rollResult = new int[n];
        for(int i=0;i<rollResult.length;i++){
            rollResult[i] = new Random().nextInt(6)+1;
        }
       return rollResult;
    }

    //Feature 2: check if the array contains duplicate values
    public boolean containsDuplicates(int[] inputArr) {
        List<Integer> list = new ArrayList<Integer>();
        for(int n : inputArr){
            if(!list.contains(n)){
                list.add(n);
            }
            //found duplicates return true means it has duplicates
            else return true;
        }
        //if does not have duplicates, return false
    return false ;
    }

   //Feature 3: calculate averages in the array
   public String calAvg(int[] inputArr){
       double sum = 0.0;
       for(int n : inputArr ){
           sum += n;
       }
       DecimalFormat df = new DecimalFormat("#.##");
       return df.format(sum/inputArr.length);
   }

   //Feature 4: calculat average value for each array and return the lowest average array
    public int[] calLowestAvg(int[][] inputArrs){
        double[] avg = new double[inputArrs.length];
        for(int i=0;i<inputArrs.length;i++){
             int sum = 0;
            for(int j=0;j<inputArrs[i].length;j++){

                sum +=inputArrs[i][j];
            }
           avg[i] = sum/inputArrs[i].length;
        }
        double preLow = avg[0];
        int idx = 0;
        for(int k=1;k<avg.length;k++){
            if(avg[k]<preLow){
                preLow = avg[k];
                idx = k;
            }
        }
        return inputArrs[idx];
    }



    //Lab03 Method#1: Analyzing Weather Data
    public HashMap<String,Integer> analyzeWeatherData(int[][] octSeattleWeather){
        int min =999;
        int max =0;
        HashMap<String,Integer> res = new HashMap<String,Integer>();
        HashSet<Integer> set = new HashSet<Integer>();
        for(int i=0;i<octSeattleWeather.length;i++){
            for(int j=0;j<octSeattleWeather[i].length;j++){
                min = min<octSeattleWeather[i][j]?min:octSeattleWeather[i][j];
                max = max>octSeattleWeather[i][j]?max:octSeattleWeather[i][j];
                set.add(octSeattleWeather[i][j]);
            }
        }
        res.put("High",max);
        res.put("Low",min);
        for(int k=0;k<(max-min);k++){

           if(!set.contains(k+51)) {
               res.put("Never saw temperature"+k,(k+51));
           }
        }
     return res;
    }

}
